#!/bin/sh
set -e

check_screen_installed() {
    if ! which screen >/dev/null; then
        echo "error: screen is not installed." >&2
        exit 1
    fi
}
check_unite_screen_installed() {
    tmpfile=`mktemp`
    >$tmpfile
    vim -c 'set rtp+=$PWD' \
        -c "redir! > $tmpfile" \
        -c 'silent echo globpath(&rtp, "autoload/unite.vim") != "" ? "unite" : ""' \
        -c 'silent echo globpath(&rtp, "autoload/unite/autoload/sources/screen.vim") != "" ? "unite-screen" : ""' \
        -c 'redir END' \
        -c 'qa!'

    if ! grep -q -x 'unite' "$tmpfile"; then
        rm -f "$tmpfile"
        echo "error: you have not installed unite.vim" >&2
        exit 1
    fi
    if ! grep -q -x 'unite-screen'; then
        rm -f "$tmpfile"
        echo "error: you have not installed unite-screen.vim" >&2
        exit 1
    fi
}
is_screen_running() {
    # tscreen also uses this varariable.
    [ ! -z "$WINDOW" ]
}
is_tmux_running() {
    [ ! -z "$TMUX" ]
}



cd `dirname $0`

# Check screen is installed.
check_screen_installed

# TODO: Check unite.vim and unite-screen.vim are installed.
# NOTE: Currently disabled for 2 reasons.
# * Heavy to invoke vim command twice
# * this function won't work
# check_unite_screen_installed

OPT_ALL=false
while [ $# -ne 0 ]; do
    case "$1" in
        -a|--all) OPT_ALL=true
            ;;
        --) shift; break
            ;;
    esac
    shift
done
export OPT_ALL

if is_screen_running; then
    screen -X windows
fi

# 'while getchar(0) ...' is Ex command
# to skip typed characters before vim started.
vim -c 'while getchar(0) | echon "" | endwhile' -c 'set rtp+=$PWD' -c 'Unite screen'
